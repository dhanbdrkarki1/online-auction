version: '3.8'

services:
  db:
    image: postgres:latest
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=auction_db
      - POSTGRES_USER=auction_admin
      - POSTGRES_PASSWORD=auction_admin
    networks:
      - auction-network

  cache:
    image: redis:latest
    restart: always
    volumes:
      - ./data/cache:/data
    ports:
      - "6379:6379"
    networks:
      - auction-network

  rabbitmq:
    image: rabbitmq:management
    restart: always
    ports:
      - 5672:5672  # Port for message queue
      - 15672:15672  # Port for RabbitMQ management interface
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - auction-network

  auction-web:
    build: .
    entrypoint: "./entrypoint.sh"
    command: ["uwsgi", "--ini", "/code/config/uwsgi/uwsgi.ini"]
    restart: always
    volumes:
      - .:/code
    ports:
      - 8000:8000
    environment:
      - DJANGO_SETTINGS_MODULE=auction.settings.prod
      - POSTGRES_DB=auction_db
      - POSTGRES_USER=auction_admin
      - POSTGRES_PASSWORD=auction_admin
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://cache:6379/0
    depends_on:
      - db
      - cache
      - rabbitmq
    networks:
      - auction-network

  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./config/nginx:/etc/nginx/templates
      - .:/code
    ports:
      - 80:80
      - 443:443
    depends_on:
      - auction-web
    networks:
      - auction-network

  daphne:
    build: .
    working_dir: /code/auction
    command: ["daphne", "-u", "/code/auction/daphne.sock", "auction.asgi:application"]
    restart: always
    volumes:
      - .:/code
    environment:
      - DJANGO_SETTINGS_MODULE=auction.settings.prod
      - POSTGRES_DB=auction_db
      - POSTGRES_USER=auction_admin
      - POSTGRES_PASSWORD=auction_admin
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://cache:6379/0
    depends_on:
      - db
      - cache
    networks:
      - auction-network

  celery:
    build: .
    working_dir: /code/auction
    command: ["celery", "-A", "auction", "worker", "--loglevel=INFO", "--pool=solo"]
    restart: always
    volumes:
      - .:/code
    environment:
      - DJANGO_SETTINGS_MODULE=auction.settings.prod
      - POSTGRES_DB=auction_db
      - POSTGRES_USER=auction_admin
      - POSTGRES_PASSWORD=auction_admin
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://cache:6379/0
    depends_on:
      - rabbitmq
      - cache
    networks:
      - auction-network

networks:
  auction-network:
    driver: bridge