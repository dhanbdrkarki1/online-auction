services:
  db:
    image: postgres:latest
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - auction-network

  cache:
    image: redis:latest
    restart: always
    volumes:
      - ./data/cache:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - auction-network

  rabbitmq:
    image: rabbitmq:management
    restart: always
    ports:
      - ${RABBITMQ_PORT}:5672  # Port for message queue
      - ${RABBITMQ_MANAGEMENT_INTERFACE_PORT}:15672  # Port for RabbitMQ management interface
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    networks:
      - auction-network

  auction-web:
    build: .
    entrypoint: "./entrypoint.sh"
    command: ["uwsgi", "--ini", "/code/config/uwsgi/uwsgi.ini"]
    restart: always
    volumes:
      - .:/code
    ports:
      - 8000:8000
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      # Debug Mode
      - DEBUG_STATUS=${DJANGO_DEBUG} 
      # Django Secret Key
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      # Allowed Hosts
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      # Django SuperUser
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      # DB Environment
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      # Celery
      - CELERY_BROKER_URL=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@${RABBITMQ_HOST}:${RABBITMQ_PORT}//
      - CELERY_RESULT_BACKEND=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}
      # Email setup
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      # Google OAuth - Social Login
      - SOCIAL_AUTH_GOOGLE_OAUTH2_KEY=${GOOGLE_CLIENT_ID}
      - SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET=${GOOGLE_CLIENT_SECRET}
    depends_on:
      - db
      - cache
      - rabbitmq
    networks:
      - auction-network

  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./config/nginx:/etc/nginx/templates
      - .:/code
    ports:
      - 80:80
      - 443:443
    depends_on:
      - auction-web
    networks:
      - auction-network

  daphne:
    build: .
    working_dir: /code/auction
    command: ["daphne", "-u", "/code/auction/daphne.sock", "auction.asgi:application"]
    restart: always
    volumes:
      - .:/code
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      # Debug Mode
      - DEBUG_STATUS=${DJANGO_DEBUG} 
      # Django Secret Key
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      # Allowed Hosts
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      # Django SuperUser
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      # DB Environment
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      # Celery
      - CELERY_BROKER_URL=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@${RABBITMQ_HOST}:${RABBITMQ_PORT}//
      - CELERY_RESULT_BACKEND=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}
      # Email setup
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      # Google OAuth - Social Login
      - SOCIAL_AUTH_GOOGLE_OAUTH2_KEY=${GOOGLE_CLIENT_ID}
      - SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET=${GOOGLE_CLIENT_SECRET}
    depends_on:
      - db
      - cache
    networks:
      - auction-network

  celery:
    build: .
    working_dir: /code/auction
    command: ["celery", "-A", "auction", "worker", "--loglevel=INFO", "--pool=solo"]
    restart: always
    volumes:
      - .:/code
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      # Debug Mode
      - DEBUG_STATUS=${DJANGO_DEBUG} 
      # Django Secret Key
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      # Allowed Hosts
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      # Django SuperUser
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      # DB Environment
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      # Celery
      - CELERY_BROKER_URL=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@${RABBITMQ_HOST}:${RABBITMQ_PORT}//
      - CELERY_RESULT_BACKEND=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}
      # Email setup
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      # Google OAuth - Social Login
      - SOCIAL_AUTH_GOOGLE_OAUTH2_KEY=${GOOGLE_CLIENT_ID}
      - SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET=${GOOGLE_CLIENT_SECRET}
    depends_on:
      - rabbitmq
      - cache
    networks:
      - auction-network

networks:
  auction-network:
    driver: bridge